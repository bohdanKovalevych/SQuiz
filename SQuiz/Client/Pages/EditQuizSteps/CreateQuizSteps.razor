@page "/createQuiz"

@using FluentValidation
@using FluentValidation.Results
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SQuiz.Shared.Dtos.Quiz

@attribute [Authorize]

@inject IValidator<EditQuizDto> Validator
@inject HttpClient Http
@inject NavigationManager Nav

<div class="container">
    <QuizSteps Mode="QuizSteps.MODE.CREATE"
               ValidateHandler="Validate"
               SubmitHandler="CreateNewQuiz">

    </QuizSteps>
</div>

@code {
    public ValidationResult Validate(EditQuizDto quiz) 
    {
        return Validator.Validate(quiz); 
    }

    public async Task<string> CreateNewQuiz(EditQuizDto quiz) 
    {
        string? message = null;
        try {
            var result = await Http.PostAsJsonAsync("Quizzes", quiz);
            message = await result.Content.ReadAsStringAsync();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        } 
        
        return message;
    }
}