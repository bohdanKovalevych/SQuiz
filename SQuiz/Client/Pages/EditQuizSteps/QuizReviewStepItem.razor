@using SQuiz.Client.Shared.Components
@using SQuiz.Shared.Dtos.Quiz
@using SQuiz.Shared.Extensions

<StepItem Title="Review details" Order=@(Model.Questions.Count + 3)>
    <div class="container">
        <div class="list-group">
            <div class="list-group-item">
                <div class="row">
                    <div class="col-3">
                        Quiz Name:
                    </div>
                    <div class="col">
                        @Model.Name
                    </div>
                </div>
            </div>
            <div class="list-group-item">
                <div class="row">
                    <div class="col-3">
                        Quiz Description:
                    </div>
                    <div class="col">
                        @Model.Description
                    </div>
                </div>
            </div>
            <div class="list-group-item">
                <div class="row">
                    <div class="col-3">
                        Is public:
                    </div>
                    <div class="col">
                        @(Model.IsPublic ? "Yes" : "No")
                    </div>
                </div>
            </div>

            @foreach(var (q, i) in Model.Questions.WithIndex())
            {
                <div class="list-group-item">
                    <div class="row">
                        <ValidationErrorMessage Model="Model" For=@($"Questions[{i}].QuestionText") ValidationResult="Parent.ValidationResult"></ValidationErrorMessage>
                        <div class="col-12 m-1">
                            <span class="alert alert-info">
                                <span class="small">@(i + 1). </span>
                                <span>@q.QuestionText</span>
                            </span>
                        </div>

                        @foreach (var (a, j) in q.Answers.WithIndex())
                        {
                            <div class="m-3">
                                <ValidationErrorMessage Model="Model" For=@($"Questions[{i}].Answers[{j}].AnswerText") ValidationResult="Parent.ValidationResult"></ValidationErrorMessage>
                            </div>
                            <div class="col-12 m-3">
                                <span class="alert @(j == q.CorrectAnswerIndex ? "alert-success" : "alert-secondary")">
                                    <span class="small">@((char)('a' + j)).</span>
                                    <span>@a.AnswerText</span>
                                </span>
                            </div>
                        }
                    </div>
                </div>
            }

        </div>
        <div class="m-3 text-center">
            <button class="btn btn-sm btn-primary" @onclick="Parent.Save">Save</button>
        </div>
    </div>
</StepItem>

@code {
    [CascadingParameter]
    public QuizSteps Parent { get; set; }

    public EditQuizDto Model => Parent.Model;

    public EditQuizDto? InitialModel => Parent.InitialModel;
}