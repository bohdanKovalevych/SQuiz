@using SQuiz.Client.Interfaces
@using SQuiz.Shared.Dtos.Game
@inject IInitGameService InitGameService

<MudAlert Class="pa-3 m-1">'@Game?.Name'.</MudAlert>
<MudAlert Severity="Severity.Info" class="pa-3 m-1">Game contains @(Game?.QuestionCount) questions.</MudAlert>
<MudAlert Severity="Severity.Info" class="pa-3 m-1">When you are ready, press start.</MudAlert>

@if (Game != null)
{
    <MudPaper Elevation="0" Class="d-flex animation flex-row justify-center gap-2">
        <MudText Style="blue-text">@InitGameService.GetLink(Game.ShortId)</MudText>
        <MudIconButton Icon="@Icons.Material.Filled.ContentCopy" OnClick="() => InitGameService.CopyLink(Game.ShortId)" />
    </MudPaper>
    <MudText>Game code is: @Game.ShortId</MudText>
}

<MudList>
    <MudListSubheader>
        Players
    </MudListSubheader>
    @if (Players != null)
    {
        @foreach (var player in Players)
        {
            <MudListItem>
                <MudBadge Visible="player.IsOnline" Color="Color.Success" Dot>
                    @player.Name                
                </MudBadge>
            </MudListItem>    
        }
    }
</MudList>

<MudButton Color="Color.Primary"
           Variant="Variant.Filled"
           Class="pa-3 ma-3"
           @onclick="OnStart">Start</MudButton>

@code {
    [Parameter]
    public RealtimeGameOptionDto? Game { get; set; }

    [Parameter]
    public List<PlayerDto>? Players { get; set; }

    [Parameter]
    public EventCallback OnStart { get; set; }
}