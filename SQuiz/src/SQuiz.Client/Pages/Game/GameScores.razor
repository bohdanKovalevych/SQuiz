@page "/gameScores"
@layout PlayerLayout

@using SQuiz.Client.Interfaces
@using SQuiz.Client.Pages.Game.GameCoreComponents
@using SQuiz.Client.Services
@using SQuiz.Shared.Dtos.Game

@inject ICookieStoreService CookieStoreService
@inject ISessionStorageService SessionStorage
@inject PublicClient Http
@inject NavigationManager Nav

<GameScoresComponent
    ErrorMessage="@_errorMessage"
    PlayerId="@_playerId"
    Scores="@_scores"/>

@code {
    string? _playerId;
    List<PlayerDto>? _scores;
    string? _errorMessage;

    protected override async Task OnInitializedAsync()
    {
        _playerId = (await CookieStoreService.GetAsync(Constants.CookiesKey.PlayerId))?.Value;
        
        if (_playerId == null)
        {
            Nav.NavigateTo(Nav.BaseUri);
            return;
        }

        var response = await Http.Client.GetAsync($"Games/scores/{_playerId}");
        
        if (!response.IsSuccessStatusCode)
        {
            _errorMessage = await response.Content.ReadAsStringAsync();
            return;
        }

        _scores = await response.Content.ReadFromJsonAsync<List<PlayerDto>>();
    }
}