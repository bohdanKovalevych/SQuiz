@using SQuiz.Client.Services
@using SQuiz.Client.Shared.Components.Dialogs
@using SQuiz.Shared.Dtos.Quiz
@using SQuiz.Shared.Extensions

@inject HttpClient Http
@inject CrudDialogService Dialog

<MudText Typo="Typo.h3">
    Quiz table
</MudText>
<LoadingWrapper WaitFor="Items">
    <MudTable Items="Items" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<QuizOptionDto, object>(x => x.ShortId)">Id</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<QuizOptionDto, object>(x => x.Name)">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<QuizOptionDto, object>(x => x.QuestionsCount)">Number of questions</MudTableSortLabel></MudTh>
            <MudTh>Is public</MudTh>
            <MudTh>Description</MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<QuizOptionDto, object>(x=>x.DateUpdated!)">Date updated</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<QuizOptionDto, object>(x=>x.DateCreated!)">Date created</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                <MudButtonGroup Size="Size.Small">
                    <MudIconButton Icon="@Icons.Material.Filled.Info" Href="@($"manage-quiz/{context.Id}")"></MudIconButton>
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" @onclick=@(() => OpenModalToRemove(@context))></MudIconButton>
                </MudButtonGroup>
            </MudTd>
            <MudTd DataLabel="Id">@context.ShortId</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Number of questions">@context.QuestionsCount</MudTd>
            <MudTd DataLabel="Is public">@context.IsPublic</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
            <MudTd DataLabel="Date updated">@context.DateUpdated.ToShortDateString()</MudTd>
            <MudTd DataLabel="Date created">@context.DateCreated.ToShortDateString()</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
</LoadingWrapper>
        
@code {
    public List<QuizOptionDto>? Items { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        Items = await Http.GetFromJsonAsync<List<QuizOptionDto>>("Quizzes");
    }

    public async Task OpenModalToRemove(QuizOptionDto quiz)
    {
        var confirmed = await Dialog.AskToDeleteItem(quiz.Name, "quiz");

        if (confirmed)
        {
            await RemoveSelectedQuiz(quiz);
        }
    }

    public async Task RemoveSelectedQuiz(QuizOptionDto quiz)
    {
        var response = await Http.DeleteAsync($"Quizzes/{quiz.Id}");

        if (response.IsSuccessStatusCode)
        {
            Items?.Remove(quiz);
        }
    }
}